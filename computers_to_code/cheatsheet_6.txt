Unified Dev Commands - Environments, Docker, Git, Networking
SECTION 1: PYTHON VIRTUAL ENVIRONMENTS
Windows 10/11 (CMD)

Create: python -m venv venv
Activate: venv\Scripts\activate.bat
Deactivate: deactivate

Windows 10/11 (PowerShell)

Create: python -m venv venv
Activate: .\venv\Scripts\Activate.ps1
Deactivate: deactivate

Linux (Debian/Ubuntu/Arch)/macOS

Create: python3 -m venv venv
Activate: source venv/bin/activate
Deactivate: deactivate

SECTION 2: DOCKER BASICS
All Platforms (Windows 10/11, Linux, macOS)

Build image: docker build -t name .
Run container: docker run -d -p 8080:80 name
List containers: docker ps -a
Stop container: docker stop <container_id>
Remove container: docker rm <container_id>
Exec shell: docker exec -it <container_id> sh (or bash)

SECTION 3: GIT ESSENTIALS
All Platforms (Windows 10/11, Linux, macOS)

Init repo: git init
Clone repo: git clone <url>
Check status: git status
Add changes: git add .
Commit changes: git commit -m "message"
Push to remote: git push origin <branch>
Pull latest: git pull
View log: git log --oneline
Branch list: git branch
Switch branch: git checkout <branch>
New branch: git checkout -b <new_branch>

SECTION 4: NETWORKING COMMANDS
Windows 10/11 (CMD)

Show IP: ipconfig
Ping host: ping <host>
DNS lookup: nslookup <domain>
Port check: telnet <host> <port> (if enabled)

Windows 10/11 (PowerShell)

Show IP: Get-NetIPAddress
Ping host: Test-Connection <host>
DNS lookup: Resolve-DnsName <domain>
Port check: Test-NetConnection -ComputerName <host> -Port <port>

Linux (Debian/Ubuntu/Arch)/macOS

Show IP: ip a or ifconfig
Ping host: ping <host>
DNS lookup: nslookup <domain> or dig <domain>
Port check: nc -zv <host> <port>

SECTION 5: PERMISSIONS & EXECUTION
Windows 10/11 (CMD)

Make exec: N/A (.exe, .bat, .ps1 are executable by default)
File ownership: icacls <file> /setowner <user>
Grant access: icacls <file> /grant <user>:F

Windows 10/11 (PowerShell)

Make exec: Set-ExecutionPolicy -Scope CurrentUser -ExecutionPolicy RemoteSigned (for .ps1)
File ownership: Set-Acl -Path <file> -AclObject (Get-Acl <file> | ForEach-Object { $_.SetOwner((New-Object System.Security.Principal.NTAccount('<user>'))) })
Grant access: $acl = Get-Acl <file>; $acl.SetAccessRule((New-Object System.Security.AccessControl.FileSystemAccessRule('<user>','FullControl','Allow'))); Set-Acl <file> $acl

Linux (Debian/Ubuntu/Arch)/macOS

Make exec: chmod +x <file>
File ownership: chown <user>:<group> <file>
Grant access: chmod 755 <file>

SECTION 6: ARCHIVING & COMPRESSION
Windows 10/11 (CMD)

Zip: tar -a -c -f archive.zip <file> (Windows 10/11 has built-in tar)
Unzip: tar -xf archive.zip

Windows 10/11 (PowerShell)

Zip: Compress-Archive -Path <file> -DestinationPath archive.zip
Unzip: Expand-Archive -Path archive.zip -DestinationPath <dest>

Linux (Debian/Ubuntu/Arch)/macOS

Zip: zip -r archive.zip <file> or tar -czvf archive.tar.gz <file>
Unzip: unzip archive.zip or tar -xzvf archive.tar.gz